name: Test

on:
  pull_request:
    types: [ opened, synchronize ]

jobs:
# -------------------------------------------------
  detect-changes:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      has-changes: ${{ steps.changed.outputs.any_changed }}

    steps:
      - name: Checkout Repository
        timeout-minutes: 1
        uses: actions/checkout@v4

      - name: Detect Changes
        id: changed
        timeout-minutes: 1
        uses: tj-actions/changed-files@v46
        with:
          files: |
            Production/**
            Features/**


# -------------------------------------------------
  test:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    timeout-minutes: 5

    steps:
      - name: Setup Python
        timeout-minutes: 1
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Run Test
        timeout-minutes: 1
        run: echo "Test ran successfully."


# -------------------------------------------------
  no-test-needed:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'false'
    timeout-minutes: 5

    steps:
      - name: Setup Python
        timeout-minutes: 1
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: No Test Needed
        timeout-minutes: 1
        run: echo "No relevant changes found. No test needed. Proceeding with success."


# -------------------------------------------------
  merge-ok:
    runs-on: ubuntu-latest
    needs: [ test, no-test-needed ]
    if: ${{ always() }}
    timeout-minutes: 5

    steps:
      - name: Decide Result
        timeout-minutes: 1
        run: |
          echo "test result: ${{ needs.test.result }}"
          echo "no-test-needed result: ${{ needs['no-test-needed'].result }}"
          if [[ "${{ needs.test.result }}" == "success" || "${{ needs['no-test-needed'].result }}" == "success" ]]; then
            echo "OK"
          else
            echo "Required jobs did not succeed." >&2
            exit 1
          fi
